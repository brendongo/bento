formatter:
  bento.formatter.Stylish: {}
tools:
  r2c.eslint:
    ignore:
      - array-bracket-newline
      - array-bracket-spacing
      - array-element-newline
      - block-spacing
      - brace-style
      - camelcase
      - capitalized-comments
      - comma-dangle
      - comma-spacing
      - comma-style
      - computed-property-spacing
      - consistent-this
      - eol-last
      - func-call-spacing
      - func-name-matching
      - func-names
      - func-style
      - function-call-argument-newline
      - function-paren-newline
      - id-blacklist
      - id-length
      - id-match
      - implicit-arrow-linebreak
      - indent
      - jsx-quotes
      - key-spacing
      - keyword-spacing
      - line-comment-position
      - linebreak-style
      - lines-around-comment
      - lines-between-class-members
      - max-depth
      - max-len
      - max-lines
      - max-lines-per-function
      - max-nested-callbacks
      - max-params
      - max-statements
      - max-statements-per-line
      - multiline-comment-style
      - multiline-ternary
      - new-cap
      - new-parens
      - newline-per-chained-call
      - no-array-constructor
      - no-bitwise
      - no-continue
      - no-inline-comments
      - no-lonely-if
      - no-mixed-operators
      - no-mixed-spaces-and-tabs
      - no-multi-assign
      - no-multiple-empty-lines
      - no-negated-condition
      - no-nested-ternary
      - no-new-object
      - no-plusplus
      - no-restricted-syntax
      - no-tabs
      - no-ternary
      - no-trailing-spaces
      - no-underscore-dangle
      - no-unneeded-ternary
      - no-whitespace-before-property
      - nonblock-statement-body-position
      - object-curly-newline
      - object-curly-spacing
      - object-property-newline
      - one-var
      - one-var-declaration-per-line
      - operator-assignment
      - operator-linebreak
      - padded-blocks
      - padding-line-between-statements
      - prefer-object-spread
      - quote-props
      - quotes
      - semi
      - semi-spacing
      - semi-style
      - sort-keys
      - sort-vars
      - space-before-blocks
      - space-before-function-paren
      - space-in-parens
      - space-infix-ops
      - space-unary-ops
      - spaced-comment
      - switch-colon-spacing
      - template-tag-spacing
      - unicode-bom
      - wrap-regex
  r2c.flake8:
    ignore:
      # Indentation contains mixed spaces and tabs
      - E101
      # Indentation is not a multiple of four
      - E111
      # Indentation is not a multiple of four (comment)
      - E114
      # Expected an indented block (comment)
      - E115
      # Unexpected indentation (comment)
      - E116
      # Continuation line under-indented for hanging indent
      - E121
      # Continuation line missing indentation or outdented
      - E122
      # Closing bracket does not match indentation of opening bracket's line
      - E123
      # Closing bracket does not match visual indentation
      - E124
      # Continuation line with same indent as next logical line
      - E125
      # Continuation line over-indented for hanging indent
      - E126
      # Continuation line over-indented for visual indent
      - E127
      # Continuation line under-indented for visual indent
      - E128
      # Visually indented line with same indent as next logical line
      - E129
      # Continuation line unaligned for hanging indent
      - E131
      # Closing bracket is missing indentation
      - E133
      # Whitespace after '('
      - E201
      # Whitespace before ')'
      - E202
      # Whitespace before ':'
      - E203
      # Whitespace before '('
      - E211
      # Multiple spaces before operator
      - E221
      # Multiple spaces after operator
      - E222
      # Tab before operator
      - E223
      # Tab after operator
      - E224
      # Missing whitespace around operator
      - E225
      # Missing whitespace around arithmetic operator
      - E226
      # Missing whitespace around bitwise or shift operator
      - E227
      # Missing whitespace around modulo operator
      - E228
      # Missing whitespace after ',', ';', or ':'
      - E231
      # Multiple spaces after ','
      - E241
      # Tab after ','
      - E242
      # Unexpected spaces around keyword / parameter equals
      - E251
      # At least two spaces before inline comment
      - E261
      # Inline comment should start with '# '
      - E262
      # Block comment should start with '# '
      - E265
      # Too many leading '#' for block comment
      - E266
      # Multiple spaces after keyword
      - E271
      # Multiple spaces before keyword
      - E272
      # Tab after keyword
      - E273
      # Tab before keyword
      - E274
      # Missing whitespace after keyword
      - E275
      # Expected 1 blank line, found 0
      - E301
      # Expected 2 blank lines, found 0
      - E302
      # Too many blank lines (3)
      - E303
      # Blank lines found after function decorator
      - E304
      # Expected 2 blank lines after end of function or class
      - E305
      # Multiple imports on one line
      - E401
      # Module level import not at top of file
      - E402
      # Line too long (82 > 79 characters)
      - E501
      # The backslash is redundant between brackets
      - E502
      # Multiple statements on one line (colon)
      - E701
      # Multiple statements on one line (semicolon)
      - E702
      # Statement ends with a semicolon
      - E703
      # Multiple statements on one line (def)
      - E704
      # Comparison to none should be 'if cond is none:‘
      - E711
      # Comparison to true should be 'if cond is true:' or 'if cond:'
      - E712
      # Test for membership should be 'not in'
      - E713
      # Test for object identity should be 'is not'
      - E714
      # Do not compare types, use 'isinstance()'
      - E721
      # Do not assign a lambda expression, use a def
      - E731
      # Do not use variables named 'l', 'o', or 'i'
      - E741
      # Do not define classes named 'l', 'o', or 'i'
      - E742
      # Do not define functions named 'l', 'o', or 'i'
      - E743
      # Indentation contains tabs
      - W191
      # Trailing whitespace
      - W291
      # No newline at end of file
      - W292
      # Blank line contains whitespace
      - W293
      # Blank line at end of file
      - W391
      # Line break occurred before a binary operator
      - W503
      # Line break occurred after a binary operator
      - W504
      # ‘from module import *’ only allowed at module level
      - F406
